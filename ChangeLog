2012-07-08  Ivan Vučica  <ivan@vucica.net>
	
	* Source/CALayer.m:
	Support for +defaultValueForKey:.

	* Headers/QuartzCore/CALayer.h:
	* Source/CALayer.m:
	* Source/CAImplicitAnimationObserver.h:
	* Source/CAImplicitAnimationObserver.m:
	Initial work on using KVO to support implicit animations.

2012-07-08  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/AppleSupport.h:
	* Headers/QuartzCore/AppleSupportRevert.h:
	Added a bit of documentation on purpose of these files.
	Moved CAAction into a separate file.
		
	* Headers/QuartzCore/CAAction.h:
	* Source/GNUmakefile:
	Moved CAAction into a separate file.

	* Headers/QuartzCore/CAAnimation.h:
	Added specification about which protocols CAAnimation should
	implement. Removed dead code.
	
	* Headers/QuartzCore/CABase.h:
	Removed inclusion of Foundation/Foundation.h.

	* Headers/QuartzCore/CALayer.h:
	Moved CAAction into a separate file. Split up the informal protocols
	for the layer delegate and the layout manager.

	* Source/CAAnimation.m:
	* Source/CALayer.m:
	* Source/CAMediaTiming.m:
	Added inclusion of Foundation/Foundation.h

2012-07-08  Ivan Vučica  <ivan@vucica.net>
	
	* Source/CALayer+FrameworkPrivate.h:
	* Source/CAAnimation+FrameworkPrivate.h:
	* Source/CALayer.m
	* Source/GNUmakefile:
	* Tests/GNUmakefile:
	Changes from Fred Kiefer to fix compiling with GCC under GNUstep.
	Some additional small fixes.

2012-07-01  Ivan Vučica  <ivan@vucica.net>

	* Source/CAAnimation.m:
	Slerp for interpolating quaternions gained from decomposing of
	transform matrix. This works in at least elementary case added
	into hello_animation.

	* Source/CALayer.m:
	Opacity set to 1.0 by default.

	* Source/CARenderer.m:
	Support for opacity when rendering.

	* Tests/hello_animation.m:
	Improved test involving transform interpolation, and added opacity
	pulse animation to the same test. This test now also translates
	in addition to rotating.


2012-07-01  Ivan Vučica  <ivan@vucica.net>

	* Source/CAAnimation.m:
	Linear interpolation moved into separate function. Added functions
	for conversion between rotation matrices and quaternions. 

	Work on interpolating CATransform3D values. Matrix is decomposed into
	translation, scale and rotation components, and each is interpolated
	separately. Rotation is interpolated by conversion into quaternion
	and then interpolating quaternion's components.

	Unfortunately, some part of the process (possibly the entire concept)
	still doesn't work.

	* Tests/hello_animation.m:
	Added a test for CATransform3D which involves rotation.

2012-07-01  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/AppleSupport.h:
	* Headers/QuartzCore/AppleSupportRevert.h:
	* Headers/QuartzCore/CATransform3D.h:
	* Source/CATransform3D.m:
	Added CATransform3DInvert(). Added CATransform3D category on
	NSValue.

	* Tests/CATransform3D/catransform3d.m:
	* Tests/CATransform3D/Makefile.gs.mac:
	Added some tests for CATransform3DInvert().

2012-07-01  Ivan Vučica  <ivan@vucica.net>

	* GSQuartzCore.xcodeproj/project.pbxproj:
	* Headers/QuartzCore/CAAnimation.h:
	* Headers/QuartzCore/CALayer.h:
	* Source/CAAnimation+FrameworkPrivate.h:
	* Source/CALayer+FrameworkPrivate.h:
	* Source/CAAnimation.m:
	* Source/CARenderer.m:
	Moved framework-private method declarations into separate headers.

	* Source/CALayer.m:
	Content now preserved upon resize. Context created when required
	and in appropriate place: -[CALayer display].
	Moved framework-private method declarations into separate headers.

	* Tests/hello_animation.m:
	Test code for bounds resize.

2012-07-01  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CALayer.h:
	Replaced references to NSLayoutManager with id.

	* Source/CAAnimation.m:
	* Source/CABackingStore.m:
	* Source/CARenderer.m:
	* Source/CATransaction.m:
	* Source/CATransform3D.m:
	* Tests/QCTestOpenGLView.m:
	* Tests/hello_animation.m:
	Code style corrections.

	* Source/CALayer.m:
	Code style corrections. Now we always let Core Graphics allocate
	date for the bitmap context.

2012-06-25  Ivan Vučica  <ivan@vucica.net>

	* Tests/GLES/GLESContext.h:
	* Tests/GLES/GLESContext.m:
	Experimental GLESContext class which uses EGL and a small bit
	of misuse of a class in -back in order to provide an OpenGL ES
	context. Once finished, probably needs to find a home elsewhere
	and not in QuartzCore tests.

	In the future, it can provide an ES context for AppKit, an ES
	context for UIKit, and an ES context for CAEAGLLayer.

	Class temporarily includes a definition for gluBuild2DMipmaps()
	which is missing in ES, but is currently referenced to in a
	few places.

	* Tests/GNUmakefile:
	Added commented-out lines that enable compiling for OpenGL ES.

	* Tests/hello.m:
	Example adapted for ES by switching away from glBegin()/glEnd().

	* Tests/QCTestOpenGLView.h:
	* Tests/QCTestOpenGLView.m:
	Added a compile time option which makes this view inherit from
	NSView, but implement equivalent methods for using GLESContext
	in place of a regular NSOpenGLContext.

2012-06-25  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CALayer.h:
	* Source/CALayer.m:
	* Source/CARenderer.m:
	* Tests/CATransform3D/GNUmakefile:
	* Tests/GNUmakefile:
	Removed direct uses of Cairo, as well as related Opal hacks.

2012-06-24  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CAAnimation.h:
	* Source/CALayer.m:
	* Tests/hello_opal.m:
	Fixed compiling.

	* Source/CAAnimation.m:
	Autoreverses now defaults to correct value of 'NO'. Fixed 
	compiling.
	
	* Tests/hello_animation.m:
	Fixed label on 'Tests' menu under GNUstep.

	* Tests/main.m:
	Added main menu under GNUstep, so that hello_animation test
	gets its menu.

2012-06-24  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CALayer.h:
	Added sublayerTransform property.

	* Source/CAAnimation.m:
	Added default value for repeatCount property.

	* Source/CALayer.m:
	Added sublayerTransform property and support for animation's
	repeatCount property (preventing removal if animation is
	repeating). Property 'autoreverses' doubles the time needed
	for the animation.

	* Source/CARenderer.m:
	Added support for sublayers.

	* Tests/hello_animation.m:
	Testing of the sublayerTransform property. Changed some
	positions and angles to make things more visible.

2012-06-24  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CAAnimation.h:
	* Headers/QuartzCore/CAMediaTiming.h:
	* Source/CAAnimation.m:
	* Source/CALayer.m:
	* Source/CARenderer.m:
	* Tests/hello_animation.m:
	Rework of timing model, introducing frame begin time, and
	approximating behavior when frame begin time doesn't match
	CACurrentMediaTime(). It's not highly important to match
	it exactly, as it doesn't seem like it should be used with
	Cocoa implementation either (if one passes, e.g.,
	CACurrentMediaTime()-1, animations are delayed, but time
	conversion methods are unaffected).
	
	Some methods have been moved to CAMediaTiming protocol which
	ordinarily don't belong there.

	Time conversion functions, for converting between layers,
	have been implemented.

	* Headers/QuartzCore/CALayer.h:
	Added some private methods for traversing the layer tree.

2012-06-23  Ivan Vučica  <ivan@vucica.net>

	* GSQuartzCore.xcodeproj/project.pbxproj:
	* Headers/QuartzCore/AppleSupport.h:
	* Headers/QuartzCore/AppleSupportRevert.h:
	* Source/CAMediaTiming.m:
	Added CAMediaTiming.m, containing definitions for fillmode
	constants. Under Cocoa, turned on building of 32-bit code,
	in order to approach feature-set of older GNU runtimes and
	compilers, making writing non-portable code easier to spot.

	* Headers/QuartzCore/CAAnimation.h:
	* Headers/QuartzCore/CALayer.h:
	* Headers/QuartzCore/CAMediaTiming.h:
	* Headers/QuartzCore/CARenderer.h:
	* Source/CAAnimation.m:
	* Source/CALayer.m:
	* Source/CARenderer.m:
	Added support for presentation layers and animations.
	Added some missing -dealloc methods. Corrected CAMediaTiming
	protocol by adding missing properties.

	* Tests/GNUstepQuartzCoreTests.xcodeproj/project.pbxproj:
	Under Cocoa, turned on building of 32-bit code, in order
	to approach feature-set of older GNU runtimes and compilers,
	making writing non-portable code easier to spot.

	* Tests/hello_animation.m:
	Added testing of sublayers. Some code for figuring out
	correct behavior of time conversion. Some new animation
	tests.

	* Source/CABackingStore.m:
	Added implementation of -dealloc.
	
	* Source/CABase.m:
	Added mach-based implementation of CACurrentMediaTime() in
	order to get the same results as under Cocoa. Regular UNIX
	implementation still used under non-Mach platforms.
	
	* Source/CAValueFunction.m:
	* Headers/QuartzCore/CAValueFunction.h:
	Added stub of CAValueFunction class.

2012-06-22  Ivan Vučica  <ivan@vucica.net>

	* Tests/GNUstepQuartzCoreTests.xcodeproj/project.pbxproj:
	* Tests/hello_animation-Info.plist:
	* Tests/hello_animation.m:
	* Tests/GNUmakefile:
	Added a new test, hello_animation, demonstrating and testing 
	use of animations.
	
	* Headers/QuartzCore/CALayer.h:
	* Source/CALayer.m:
	Added support for presentation and model layers. Began adding
	animation functions.

2012-06-22  Ivan Vučica  <ivan@vucica.net>

	* GSQuartzCore.xcodeproj/project.pbxproj:
	* Source/CABackingStore.h:
	* Source/CABackingStore.m:
	* Headers/QuartzCore/AppleSupport.h:
	* Headers/QuartzCore/AppleSupportRevert.h:
	* Source/CALayer.m:
	* Source/GNUmakefile:
	Added CABackingStore as a wrapper around CGContextRef. Although
	apparently toll-free bridged under Cocoa just as under Opal, this
	eliminates a compiler warning when setting a context as contents
	of a layer.

	* Source/CARenderer.m:
	GSQuartzCore under Cocoa can now display contents of a layer.

2012-06-22  Ivan Vučica  <ivan@vucica.net>

	* GSQuartzCore.xcodeproj/project.pbxproj:
	* Headers/QuartzCore/AppleSupport.h:
	* Headers/QuartzCore/AppleSupportRevert.h:
	* Mac/GSQuartzCore-Info.plist:
	* Mac/GSQuartzCore-Prefix.pch:
	* Mac/en.lproj/InfoPlist.strings:
	Added a hack for getting GNUstep's QuartzCore to run under Cocoa
	without conflicting with Cocoa's implementation. Important for
	quickly comparing differences between implementations.

	* Headers/QuartzCore/CAAnimation.h:
	* Headers/QuartzCore/CABase.h:
	* Headers/QuartzCore/CALayer.h:
	* Headers/QuartzCore/CAMediaTiming.h:
	* Headers/QuartzCore/CARenderer.h:
	* Headers/QuartzCore/CATransform3D.h:
	* Headers/QuartzCore/CoreAnimation.h:
	* Headers/QuartzCore/QuartzCore.h:
	* Source/CAAnimation.m:
	* Source/CALayer.m:
	* Source/CATransaction.m:
	* Tests/GNUstepQuartzCoreTests.xcodeproj/project.pbxproj:
	* Tests/QCTestOpenGLView.h:
	* Tests/hello.m:
	* Tests/hello_carenderer.m:
	* Tests/main.m:
	Reworked a lot of dependencies to support the GSQuartzCore hack.
	Tests can now run using GSQuartzCore under Cocoa, too. GSQuartzCore
	running under Cocoa currently doesn't read the bitmap data from
	CGContextRef, so layers are empty.

	* Source/CARenderer.m:
	Fixed an incorrect presumption that CGFloat is the same as
	GLfloat.

2012-06-18  Ivan Vučica  <ivan@vucica.net>

	* Headers/QuartzCore/CATransaction.h:
	* Source/CATransaction.m:
	Began implementing transactions. This will allow work on animations.

2012-06-18  Ivan Vučica  <ivan@vucica.net>

	* Source/CATransform3D.m:
	Fix of bugs detected by tests: identity matrix was not correctly
	identified, matrix multiplication arguments were not given in correct
	order, rotation matrix was not correctly constructed.
	Fixed order of transform operations when rendering.

	* Tests/CATransform3D/Makefile.mac:
	Renamed previous file which is used for testing on OS X.

	* Tests/Testing.h:
	* Tests/CATransform3D/GNUmakefile:
	* Tests/CATransform3D/run_tests.sh:
	Added support for running the tests under GNUstep.
	
	* .hgignore:
	Added to facilitate easier use with HgSubversion.

2012-06-16  Ivan Vučica  <ivan@vucica.net>

	* Tests/CATransform3D/GNUmakefile:
	* Tests/CATransform3D/TestInfo:
	* Tests/CATransform3D/catransform3d.m:
	* Tests/Testing.h:
	Added some basic tests for CATransform3D.

2012-06-15  Ivan Vučica  <ivan@vucica.net>

	* Tests/hello.m:
	* Tests/hello_carenderer.m:
	Added glFlush() before swapping buffers via -[NSOpenGLContext
	flushBuffer], fixing OS X.

2012-06-13  Ivan Vučica  <ivan@vucica.net>

	* Tests/GNUstepQuartzCoreTests.xcodeproj/project.pbxproj:
	* Tests/data/MainMenu.xib:
	* Tests/data/hello_carenderer-Info.plist:
	* Tests/hello-Info.plist:
	Xcode project for building Cocoa versions of the demos.

	* Tests/QCTestOpenGLView.m:
	* Tests/hello.m:
	* Tests/hello_carenderer.m:
	Patches for the demos to get them as close to running as
	possible. They're still not rendering anything into the OpenGL
	context, though.

